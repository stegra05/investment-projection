# Flask Core Configuration
SECRET_KEY=your_flask_secret_key_here
FLASK_ENV=development # Typically 'development', 'production', or 'testing'

# JWT Configuration
JWT_SECRET_KEY=your_jwt_secret_key_here # Can be the same as SECRET_KEY if desired, but a separate one is good practice

# Database Configuration
# General database URL (used by ProductionConfig by default, and as a fallback for Config)
# Example for PostgreSQL: DATABASE_URL=postgresql://user:password@host:port/dbname
# Example for SQLite: DATABASE_URL=sqlite:///./app.db
DATABASE_URL=postgresql://user:password@localhost:5432/investment_projection_prod

# Development specific database URL
# Example for PostgreSQL: DEV_DATABASE_URL=postgresql://user:password@host:port/dbname_dev
# Example for SQLite: DEV_DATABASE_URL=sqlite:///./dev_app.db
DEV_DATABASE_URL=postgresql://user:password@localhost:5432/investment_projection_dev

# Testing specific database URL
# Example for PostgreSQL: TEST_DATABASE_URL=postgresql://user:password@host:port/dbname_test
# Example for SQLite (in-memory): TEST_DATABASE_URL=sqlite:///:memory:
# Example for SQLite (file-based): TEST_DATABASE_URL=sqlite:///./test_app.db
TEST_DATABASE_URL=sqlite:///:memory:

# Celery Configuration (Message Broker and Result Backend)
# Example for Redis:
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
# Example for RabbitMQ:
# CELERY_BROKER_URL=amqp://guest:guest@localhost:5672//
# CELERY_RESULT_BACKEND=rpc://

# Mail Server Configuration (Optional - for features like password reset, notifications)
# MAIL_SERVER=smtp.example.com
# MAIL_PORT=587
# MAIL_USE_TLS=True
# MAIL_USERNAME=your-email@example.com
# MAIL_PASSWORD=your_email_password
# ADMINS="your-admin-email@example.com" # Comma-separated if multiple