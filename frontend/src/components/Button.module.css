/* Button Styles */
.button {
  display: inline-flex; /* Align icon and text */
  align-items: center;
  justify-content: center;
  gap: var(--space-xs); /* Gap between icon and text */
  padding: var(--space-xs) var(--space-m); /* Vertical/Horizontal padding */
  font-family: inherit;
  font-size: var(--font-size-body);
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height-base);
  border-radius: var(--border-radius-m);
  border: 1px solid transparent; /* Base border */
  cursor: pointer;
  text-align: center;
  text-decoration: none; /* For link-styled buttons */
  white-space: nowrap; /* Prevent wrapping */
  transition: background-color var(--transition-duration) ease,
              border-color var(--transition-duration) ease,
              color var(--transition-duration) ease,
              box-shadow var(--transition-duration) ease,
              transform var(--transition-duration) ease;
}

/* === Variants === */

/* Primary */
.primary {
  background-color: var(--color-primary);
  color: var(--color-text-on-primary);
  border-color: var(--color-primary);
}

.primary:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-primary) 85%, black);
  border-color: color-mix(in srgb, var(--color-primary) 85%, black);
}

.primary:active:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-primary) 70%, black);
  border-color: color-mix(in srgb, var(--color-primary) 70%, black);
  transform: translateY(1px);
}

/* Secondary */
.secondary {
  background-color: var(--color-ui-background);
  color: var(--color-primary);
  border-color: var(--color-primary);
}

html[data-theme='dark'] .secondary {
  color: var(--color-text-link);
  border-color: var(--color-text-link);
}

.secondary:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-primary) 10%, transparent);
  border-color: color-mix(in srgb, var(--color-primary) 80%, black);
}

html[data-theme='dark'] .secondary:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-text-link) 15%, transparent);
  border-color: color-mix(in srgb, var(--color-text-link) 85%, white);
}

.secondary:active:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-primary) 20%, transparent);
  transform: translateY(1px);
}

html[data-theme='dark'] .secondary:active:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-text-link) 25%, transparent);
}

/* Destructive */
.destructive {
  background-color: var(--color-ui-background);
  color: var(--color-error);
  border-color: var(--color-error);
}

.destructive:hover:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-error) 10%, transparent);
  border-color: color-mix(in srgb, var(--color-error) 80%, black);
}

html[data-theme='dark'] .destructive:hover:not(:disabled) {
    background-color: color-mix(in srgb, var(--color-error) 15%, transparent);
    border-color: color-mix(in srgb, var(--color-error) 85%, white);
}

.destructive:active:not(:disabled) {
  background-color: color-mix(in srgb, var(--color-error) 20%, transparent);
  transform: translateY(1px);
}

html[data-theme='dark'] .destructive:active:not(:disabled) {
    background-color: color-mix(in srgb, var(--color-error) 25%, transparent);
}


/* === States === */

/* Focus */
.button:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-primary) 40%, transparent);
}

.secondary:focus-visible,
.destructive:focus-visible {
  box-shadow: 0 0 0 3px color-mix(in srgb, currentColor 40%, transparent);
}

/* Disabled */
.button:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

.primary:disabled {
  background-color: color-mix(in srgb, var(--color-primary) 40%, var(--color-ui-background));
  border-color: color-mix(in srgb, var(--color-primary) 40%, var(--color-ui-background));
  color: color-mix(in srgb, var(--color-text-on-primary) 70%, var(--color-ui-background));
}

.secondary:disabled,
.destructive:disabled {
  color: var(--color-text-disabled);
  border-color: var(--color-text-disabled);
  background-color: var(--color-ui-background);
}

html[data-theme='dark'] .secondary:disabled,
html[data-theme='dark'] .destructive:disabled {
    border-color: color-mix(in srgb, var(--color-text-disabled) 70%, transparent);
}

/* Icon styling within buttons */
.button svg {
    width: 1.25em; /* Adjust as needed, relative to font size */
    height: 1.25em;
}

.buttonBase {
  display: inline-flex; /* Use inline-flex for alignment */
  align-items: center;
  justify-content: center;
  padding: var(--space-s) var(--space-m); /* Base padding */
  border-radius: 6px; /* Consistent border radius */
  font-size: 1rem;
  font-weight: 500; /* Medium weight */
  line-height: 1.2;
  border: 1px solid transparent; /* Start with transparent border */
  cursor: pointer;
  text-align: center;
  text-decoration: none; /* Remove underline */
  white-space: nowrap; /* Prevent wrapping */
  transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out, color 0.2s ease-in-out;
  user-select: none; /* Prevent text selection */
}

.buttonBase:focus {
  outline: none; /* Remove default outline */
  box-shadow: 0 0 0 3px rgba(5, 63, 150, 0.3); /* Custom focus ring - using primary base */
}

/* Icon styling */
.icon {
  width: 1.125rem; /* ~18px, adjust as needed */
  height: 1.125rem;
  margin-right: var(--space-xs); /* Space between icon and text */
  flex-shrink: 0; /* Prevent icon shrinking */
}

/* Style for icon-only buttons */
.icon.buttonBase {
    padding: var(--space-xs); /* Smaller padding for icon buttons */
    line-height: 1; /* Adjust line height */
}
.icon .icon {
    margin-right: 0; /* No margin needed if only icon */
}
.icon .text {
    display: none; /* Hide text visually for icon-only */
}

/* --- Variants --- */

/* Primary (Solid) */
.primary {
  background-color: var(--color-primary);
  color: var(--color-text-on-primary-light);
  border-color: var(--color-primary);
}

.primary:hover:not(:disabled) {
  background-color: #04337a; /* Slightly darker primary */
  border-color: #04337a;
}

/* Secondary (Outline) */
.secondary {
  background-color: transparent;
  color: var(--color-primary);
  border: 1px solid var(--color-primary);
}

.secondary:hover:not(:disabled) {
  background-color: rgba(5, 63, 150, 0.1); /* Subtle primary background */
}

html[data-theme='dark'] .secondary {
  color: var(--color-secondary); /* Teal in dark mode for secondary? Adjust if needed */
  border-color: var(--color-secondary);
}

html[data-theme='dark'] .secondary:hover:not(:disabled) {
  background-color: rgba(76, 176, 178, 0.15); /* Subtle teal background */
}

/* Destructive (Solid) */
.destructive {
  background-color: var(--color-error-light);
  color: var(--color-ui-background-light); /* White text on error bg */
  border-color: var(--color-error-light);
}

.destructive:hover:not(:disabled) {
  background-color: #b72d09; /* Darker error */
  border-color: #b72d09;
}

html[data-theme='dark'] .destructive {
  background-color: var(--color-error-dark);
  color: var(--color-text-primary-dark);
  border-color: var(--color-error-dark);
}

html[data-theme='dark'] .destructive:hover:not(:disabled) {
  background-color: #ef5e5e; /* Lighter/brighter error hover for dark */
  border-color: #ef5e5e;
}


/* Disabled State */
.buttonBase:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: var(--color-border-light); /* Neutral background */
  color: var(--color-text-secondary-light);
  border-color: var(--color-border-light);
}

html[data-theme='dark'] .buttonBase:disabled {
  background-color: var(--color-border-dark);
  color: var(--color-text-secondary-dark);
  border-color: var(--color-border-dark);
}

/* Adjust disabled state specifically for secondary/outline */
.secondary:disabled {
    background-color: transparent;
}
html[data-theme='dark'] .secondary:disabled {
    background-color: transparent;
}

/* Loading State */
.loading .text {
    opacity: 0.7;
}

.spinner {
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* Disabled State (General) */
.buttonBase:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    /* Specific background/color/border often handled by variant styles below */
}

/* ... potential variant-specific disabled styles ... */ 