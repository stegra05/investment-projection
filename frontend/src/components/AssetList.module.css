/* AssetList & AssetListItem Styles - M3 */

.list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--space-xs); /* Space between items */
}

.listItem {
    display: flex;
    align-items: center; /* Vertically center content and actions */
    justify-content: space-between;
    background-color: var(--color-surface-container-low, var(--color-surface)); /* Use appropriate surface color */
    padding: var(--space-s) var(--space-m);
    border: 1px solid var(--color-outline-variant);
    border-radius: var(--shape-corner-medium, 8px);
    transition: background-color var(--transition-duration-short) ease;
    /* No hover state on the item itself unless it's interactive */
}

.assetInfo {
    flex-grow: 1;
    display: flex;
    flex-direction: column; /* Stack details and controls */
    gap: var(--space-s);
    margin-right: var(--space-m); /* Space before action buttons */
}

.assetDetails {
    display: flex;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
    align-items: baseline; /* Align text nicely */
    gap: var(--space-s);
}

.assetName {
    font-size: var(--font-size-title-small);
    font-weight: var(--font-weight-medium);
    color: var(--color-on-surface);
    margin-right: var(--space-xs);
}

.assetType {
    font-size: var(--font-size-body-medium);
    color: var(--color-on-surface-variant);
    margin-right: var(--space-s);
}

.expectedReturn {
    font-size: var(--font-size-body-medium);
    color: var(--color-on-surface-variant);
}

/* Allocation Controls Styling */
.allocationControl {
    display: flex;
    align-items: center;
    gap: var(--space-s);
    flex-wrap: wrap; /* Allow wrapping */
}

.allocationLabel {
    font-size: var(--font-size-label-medium);
    color: var(--color-on-surface-variant);
    min-width: 100px; /* Prevent jumping */
    white-space: nowrap;
}

.allocationSlider {
    flex-grow: 1; /* Take available space */
    min-width: 150px; /* Ensure usability */
    cursor: pointer;
    /* Basic slider styles, can be enhanced */
    accent-color: var(--color-primary);
    height: 6px;
    border-radius: 3px;
    background: var(--color-surface-container-highest);
    outline: none;
    opacity: 0.7;
    transition: opacity .2s;
}

.allocationSlider:hover {
    opacity: 1;
}

.allocationSlider:disabled {
    cursor: not-allowed;
    opacity: 0.38; /* M3 disabled opacity */
}

.allocationInput {
    /* Reuse styles from Input.module.css if possible, or redefine M3 'Filled'/'Outlined' here */
    /* Assuming M3 Filled style adapted for small context: */
    width: 80px; /* Fixed width for number input */
    padding: var(--space-xxs) var(--space-xs); /* Smaller padding */
    font-size: var(--font-size-body-medium);
    color: var(--color-on-surface);
    background-color: var(--color-surface-container-high); /* Slightly different background */
    border: none;
    border-bottom: 1px solid var(--color-outline);
    border-radius: var(--shape-corner-extra-small, 4px) var(--shape-corner-extra-small, 4px) 0 0;
    text-align: right;
    -moz-appearance: textfield; /* Hide spinners */
}

.allocationInput::-webkit-outer-spin-button,
.allocationInput::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.allocationInput:focus,
.allocationInput:focus-visible {
    outline: none;
    border-bottom: 2px solid var(--color-primary);
    padding-bottom: calc(var(--space-xxs) - 1px);
    background-color: var(--color-surface-container-high);
}

.allocationInput:disabled {
    background-color: color-mix(in srgb, var(--color-on-surface) 0.04, transparent);
    color: color-mix(in srgb, var(--color-on-surface) 0.38, transparent);
    border-bottom-color: color-mix(in srgb, var(--color-on-surface) 0.12, transparent);
    cursor: not-allowed;
}

/* Action Buttons Styling */
.actions {
    display: flex;
    align-items: center;
    gap: var(--space-xs); /* Reduced gap for icon buttons */
}

.actionButton {
    /* M3 Icon Button Base */
    display: inline-flex; /* Use inline-flex for alignment */
    align-items: center;
    justify-content: center;
    width: 40px; /* M3 standard touch target size */
    height: 40px;
    padding: 0;
    border: none;
    border-radius: 50%; /* Circular */
    background-color: transparent;
    color: var(--color-primary); /* Icon color */
    cursor: pointer;
    position: relative; /* Needed for pseudo-element state layer */
    overflow: hidden; /* Clip the state layer */
    transition: background-color var(--transition-duration-short) ease;
}

.actionButton::before {
    /* State Layer */
    content: "";
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    border-radius: 50%;
    background-color: var(--color-primary);
    opacity: 0;
    transition: opacity var(--transition-duration-short) ease;
    pointer-events: none; /* Don't block clicks */
}

.actionButton:hover::before {
    opacity: var(--state-layer-opacity-hover, 0.08);
}

.actionButton:focus-visible::before {
    opacity: var(--state-layer-opacity-focus, 0.12);
}

.actionButton:active::before {
    opacity: var(--state-layer-opacity-pressed, 0.12); /* Same as focus or slightly more */
}

.actionButton:disabled {
    color: color-mix(in srgb, var(--color-on-surface) 0.38, transparent); /* M3 disabled content */
    cursor: not-allowed;
    background-color: transparent;
}

.actionButton:disabled::before {
    opacity: 0; /* No state layer when disabled */
}

.icon {
    width: 20px; /* Adjust icon size as needed */
    height: 20px;
}

.iconEdit {
    color: var(--color-primary); /* Default state */
}

.iconDelete {
    color: var(--color-error); /* Use error color for delete */
}

/* Adjust icon color for disabled state within the SVG parent */
.actionButton:disabled .icon {
    color: color-mix(in srgb, var(--color-on-surface) 0.38, transparent);
}

/* Specific state layer colors for delete button */
.actionButton[aria-label*="Delete"]::before {
    background-color: var(--color-error);
}

.actionButton[aria-label*="Delete"] .iconDelete {
    color: var(--color-error);
}

.actionButton[aria-label*="Delete"]:disabled .iconDelete {
    color: color-mix(in srgb, var(--color-on-surface) 0.38, transparent);
}

.noItemsText {
    font-size: var(--font-size-body-medium);
    color: var(--color-on-surface-variant);
    padding: var(--space-m);
    text-align: center;
} 