/* Select Styles - M3 Filled */
.selectWrapper {
  position: relative;
  display: inline-block; /* Or block, depending on usage */
  width: 100%; /* Default to full width */
}

.select {
  display: block;
  width: 100%;
  /* Adjust padding similar to Input, account for arrow */
  padding: var(--space-m) var(--space-xl) var(--space-xxs) var(--space-s); /* Top, Right(arrow), Bottom, Left */
  font-family: inherit;
  font-size: var(--font-size-body);
  font-weight: var(--font-weight-regular);
  line-height: var(--line-height-base);
  color: var(--color-on-surface);
  background-color: var(--color-surface-container-highest); /* M3 Filled background */
  border: none; /* Remove side/top borders */
  border-bottom: 1px solid var(--color-outline); /* M3 underline */
  border-radius: var(--shape-corner-extra-small, 4px) var(--shape-corner-extra-small, 4px) 0 0; /* Top corners rounded */
  appearance: none; /* Remove default arrow */
  -webkit-appearance: none;
  -moz-appearance: none;
  cursor: pointer;
  transition: border-color var(--transition-duration-short) ease,
              background-color var(--transition-duration-short) ease;
}

.select:hover {
  border-bottom-color: var(--color-on-surface); /* Darken border on hover */
  /* M3 Hover state layer */
  background-color: color-mix(in srgb, var(--color-on-surface) var(--state-layer-opacity-hover, 0.08), var(--color-surface-container-highest));
}

/* No separate dark mode hover needed if using theme variables */
/* html[data-theme='dark'] .select:hover { ... } */

.select:focus, /* Standard focus */
.select:focus-visible /* Keyboard focus */
{
  outline: none;
  border-bottom: 2px solid var(--color-primary); /* M3 focus indicator */
  padding-bottom: calc(var(--space-xxs) - 1px); /* Adjust padding for thicker border */
  box-shadow: none; /* Remove previous box-shadow focus */
}

.select:disabled {
  cursor: not-allowed;
  background-color: color-mix(in srgb, var(--color-on-surface) 0.04, transparent); /* M3 disabled container */
  color: color-mix(in srgb, var(--color-on-surface) 0.38, transparent); /* M3 disabled text */
  border-bottom-color: color-mix(in srgb, var(--color-on-surface) 0.12, transparent); /* M3 disabled border */
  opacity: 1; /* Use color mixing */
}

/* Custom Arrow */
.arrow {
  position: absolute;
  right: var(--space-s);
  /* Adjust top slightly based on new padding */
  top: calc(var(--space-m) + (var(--line-height-base) * var(--font-size-body)) / 2); 
  transform: translateY(-50%);
  width: 1.25em; /* Slightly larger arrow might be better */
  height: 1.25em;
  pointer-events: none; /* Allow clicks to pass through to select */
  color: var(--color-on-surface-variant); /* M3 icon/placeholder color */
  transition: color var(--transition-duration) ease;
}

.select:hover + .arrow {
  color: var(--color-on-surface);
}

.select:disabled + .arrow {
  color: color-mix(in srgb, var(--color-on-surface) 0.38, transparent); /* M3 disabled icon color */
  opacity: 1; /* Use color mixing */
} 

/* Placeholder Option Styling (if using the placeholder prop) */
.select option[value=""][disabled] {
  color: var(--color-on-surface-variant);
}

/* Error state styling (add if needed, assuming an error prop/class could be added to Select.jsx) */
/*
.select.error {
  border-bottom-color: var(--color-error);
}
.select.error:focus,
.select.error:focus-visible {
  border-bottom-color: var(--color-error);
}
.select.error:hover + .arrow {
  color: var(--color-on-surface);
}
.select.error + .arrow {
  color: var(--color-on-surface-variant); 
}
*/ 