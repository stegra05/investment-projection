# Non-Functional Requirements

## 1. Introduction

This document outlines the Non-Functional Requirements (NFRs) for the
Investment Planning Projection website. NFRs define the quality
attributes and constraints of the system, specifying *how well* it
should perform its functions\[cite: 8\]. They complement the Functional
Requirements by setting standards for aspects like performance,
security, usability, and maintainability. These NFRs guide architectural
and technological decisions.

## 2. Performance

-   **P-1: Calculation Speed:** Projection calculations, including those
    with time-varying assumptions, should complete within a reasonable
    timeframe (e.g., under 5-10 seconds). Real-time performance is not
    critical.
-   **P-2: Load Speed:** Data visualizations (e.g., projection graphs)
    should load reasonably quickly upon request. Immediate rendering is
    not required, but excessive delays should be avoided.

## 3. Security

-   **SEC-1: Authentication & Authorization:** Secure user registration
    and login mechanisms are required (Must-have Functional
    Requirement).
-   **SEC-2: Password Security:** User passwords must be securely stored
    using strong hashing algorithms (e.g., bcrypt)\[cite: 337, 344\].
    Secure password reset functionality is required.
-   **SEC-3: Data Transfer Security:** All communication between the
    client (browser) and server must be encrypted using HTTPS\[cite:
    332, 359\].
-   **SEC-4: Data Protection (Baseline):** While encryption of portfolio
    data at rest is not initially required, standard security measures
    should prevent unauthorized access to user portfolio data.

## 4. Usability

-   **U-1: Interface Clarity:** The user interface must have a clean
    design and be logically structured for ease of use, even for
    intermediate/advanced users navigating complex features\[cite: 29\].
-   **U-2: Workflow Efficiency:** Workflows for key tasks (e.g.,
    creating portfolios, adjusting assumptions, viewing projections)
    should be efficient and intuitive for the target user group.

## 5. Data Accuracy

-   **DA-1: Calculation Precision:** Financial calculations for
    projections should be accurate and reliable for long-term planning
    purposes. Minor rounding differences may be acceptable if
    documented.
-   **DA-2: Data Timeliness:** Underlying market data used for asset
    information or baseline assumptions does not need to be real-time.
    Reasonably recent data suitable for long-term planning is
    sufficient.

## 6. Reliability

-   **R-1: Availability:** High availability (e.g., 99.99% uptime) is
    not required. Occasional downtime for maintenance or due to
    free-tier limitations is acceptable.
-   **R-2: Recoverability:** The system should handle errors gracefully,
    and mechanisms should be in place for backup and potential recovery
    of user data (e.g., database backups).

## 7. Maintainability

-   **M-1: Modularity & Extensibility:** The system architecture
    (backend and frontend) must be designed in a modular way to
    facilitate future modifications and extensions (e.g., adding new
    asset types, projection models, or features identified as
    Should/Could-haves). This is a critical requirement.
-   **M-2: Code Readability:** Code should follow standard conventions
    for Python (Flask) and JavaScript (React) to ensure readability and
    ease of maintenance by a solo developer.
-   **M-3: Configuration Management:** Configuration (e.g., database
    connections, API keys) should be managed outside the codebase (e.g.,
    via environment variables) for easier deployment and changes.

## 8. Constraints Compliance

-   **C-1: Budget Adherence:** All technology choices (hosting,
    database, APIs) must align with the maximum budget of â‚¬10/month,
    prioritizing free tiers and open-source solutions\[cite: 695, 703\].

------------------------------------------------------------------------

*These NFRs provide the quality framework for development, balancing
desired attributes with the project's constraints.*
